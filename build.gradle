plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.3"
    id("com.google.protobuf") version "0.8.15"
}

version = "0.1"
group = "studentcrud"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.grpc:micronaut-grpc-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    testImplementation("io.micronaut:micronaut-http-client")
    //    implementation group: 'io.micronaut.data', name: 'micronaut-data-model', version: '3.8.0'
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")

    //  hibernate data handling
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("com.h2database:h2")
    annotationProcessor('io.micronaut.data:micronaut-data-processor')

    //lombok
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor("org.projectlombok:lombok:1.18.22")


//    implementation('jakarta.persistence:jakarta.persistence-api:3.1.0')

    // For postgres
    runtimeOnly("org.postgresql:postgresql")

}


application {
    mainClass.set("studentcrud.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.20.1" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.46.0" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("studentcrud.*")
    }
}




